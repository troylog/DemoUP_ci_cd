#Область ПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
    
    ЮТТесты.ДобавитьТестовыйНабор("Документ Расход товара: Проверка проведения").ВТранзакции()
		.ДобавитьТест("ПроверкаПроведенияПозитив",,"Позитив")
		.ДобавитьТест("ПроверкаПроведенияНегатив",,"Негатив")
		;

КонецПроцедуры

Процедура ПроверкаПроведенияПозитив() Экспорт
	
	// Описание программного создания: https://bia-technologies.github.io/yaxunit/docs/features/test-data/data-generation/
	
	// Создание товара
	ТоварНовый = СозданияТовара("Test_Хлеб");
		
	// Создание прихода
	Цена = 10;
	Количество = 5;
	Сумма = 50;
	ПриходТовара = СозданиеДокументаПриход(ТоварНовый, Цена, Количество, Сумма);
	
	// Создание расхода
	КонструкторРасхода = ЮТест.Данные().КонструкторОбъекта("Документы.РасходТовара")
		.ФикцияОбязательныхПолей()
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("Склад", ПриходТовара.Склад)
		.Установить("Валюта", ПриходТовара.Валюта)
		.Установить("Организация", ПриходТовара.Организация)
		.ФикцияРеквизитов("Покупатель, ВидЦен, ОбоснованиеОтгрузки")
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Товар", ТоварНовый)
			.Установить("Цена", Цена)
			.Установить("Количество", Количество)
			.Установить("Сумма", Сумма)
		;
		
	РасходТовара = КонструкторРасхода.Записать(); // формируем документ ссылку не проведенную
	
	// Проверка метода проведения, в случае выполнения: РасходТовара.ПолучитьОбъект().Записать(РежимЗаписиДокумента.Проведение)
	// Описание проверки метода: https://bia-technologies.github.io/yaxunit/docs/features/assertions/assertions-base#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D0%B2%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0
	
	
	ЮТест.ОжидаетЧто(РасходТовара.ПолучитьОбъект())  // Объект, метод которого проверяем
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Проведение)   // Указываем проверяемый метод и параметры вызова
		.НеВыбрасываетИсключение()	
		;

КонецПроцедуры

Процедура ПроверкаПроведенияНегатив() Экспорт
	
	// Описание программного создания: https://bia-technologies.github.io/yaxunit/docs/features/test-data/data-generation/
	
	// Создание товара
	ТоварНовый = СозданияТовара("Test_Хлеб");
		
	// Создание прихода
	Цена = 10;
	Количество = 5;
	Сумма = 50;
	ПриходТовара = СозданиеДокументаПриход(ТоварНовый, Цена, Количество, Сумма);
	
	// Создание расхода
	КонструкторРасхода = ЮТест.Данные().КонструкторОбъекта("Документы.РасходТовара")
		.ФикцияОбязательныхПолей()
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("Склад", ПриходТовара.Склад)
		.Установить("Валюта", ПриходТовара.Валюта)
		.Установить("Организация", ПриходТовара.Организация)
		.ФикцияРеквизитов("Покупатель, ВидЦен, ОбоснованиеОтгрузки")
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Товар", ТоварНовый)
			.Установить("Цена", Цена)
			.Установить("Количество", 10) // Кол-во заведомо больше прихода, который равен 5
			.Установить("Сумма", Сумма)
		;
		
	РасходТовара = КонструкторРасхода.Записать(); // формируем документ ссылку не проведенную
	
	// Проверка метода проведения, в случае выполнения кода: 
	//РасходТовара.ПолучитьОбъект().Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
	// Описание проверки метода: https://bia-technologies.github.io/yaxunit/docs/features/assertions/assertions-base#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D0%B2%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0
	
	//
	ЮТест.ОжидаетЧто(РасходТовара.ПолучитьОбъект())  // Объект, метод которого проверяем
		.Метод("Записать",  ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный)) // Указываем проверяемый метод и параметры вызова
		.ВыбрасываетИсключение("Не удалось провести ""Продажа")	
		;
		
	Сообщения = ПолучитьСообщенияПользователю();
	ЮТест.ОжидаетЧто(Сообщения)
		.ИмеетТип("ФиксированныйМассив")
		.ИмеетДлину(1)
		.Свойство("[0].Текст")
			.ИмеетТип("Строка")
			.Содержит("Не хватает 5 единиц товара""Test_Хлеб""")
		;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СозданияТовара(Наименование)
	
	// Создание товара с видом Товар
	//ТоварНовый = ЮТест.Данные().СоздатьЭлемент("Справочники.Товары");   - не подойдет, т.к. не можем отрегулировать вид товара
		
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.Товары")
		.ФикцияОбязательныхПолей()
		.Установить("Вид", Перечисления.ВидыТоваров.Товар)
		.Установить("Наименование", Наименование)
		;
    ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СозданиеДокументаПриход(ТоварНовый, Цена, Количество, Сумма)

	// Создание прихода
	КонструкторПрихода = ЮТест.Данные().КонструкторОбъекта("Документы.ПриходТовара")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Поставщик, Склад, Валюта, Организация")
		.Установить("Дата", ТекущаяДатаСеанса() - 100)
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Товар", ТоварНовый)
			.Установить("Цена", Цена)
			.Установить("Количество", Количество)
			.Установить("Сумма", Сумма)
		;
		
	ПриходТовара = КонструкторПрихода.Провести();  // формируем документ ссылку проведененную
	
	Результат = Новый Структура;
	
	Возврат ПриходТовара;

КонецФункции 

#КонецОбласти
