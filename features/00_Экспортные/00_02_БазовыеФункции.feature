#language: ru

@tree
@exportscenarios
@IgnoreOnCIMainBuild

Функционал: 00.02 Базовые функции тестов

Сценарий: Я подключаю клиента тестирования по имени пользователя 'ТекПользователь' и паролем 'ТекПароль'

	И я выполняю код встроенного языка
	"""bsl
		Контекст.Вставить("ТекущаяСтрокаСоединения", СтрокаСоединенияИнформационнойБазы());
	"""	

	И Я подключаю клиент тестирования с параметрами один на информационную базу:
		| 'Имя'               | 'Синоним' | 'Тип клиента' | 'Строка соединения'         | 'Логин'             | 'Пароль'      | 'Запускаемая обработка' | 'Дополнительные параметры строки запуска' |
		| '[ТекПользователь]' | ''        | 'Тонкий'      | '$ТекущаяСтрокаСоединения$' | '[ТекПользователь]' | '[ТекПароль]' | ''                      | ''                                        |

Сценарий: Создание пользователя ИБ "ИмяПользователя" с паролем "ПарольПользователя" с UID "УИДПользователя1C"

	И я запоминаю строку "ИмяПользователя" в переменную "перИмяПользователя"
 	И я запоминаю строку "ПарольПользователя" в переменную "перПарольПользователя"
 	И я запоминаю строку "УИДПользователя1C" в переменную "перУИДПользователя1C"

    И я выполняю код встроенного языка на сервере
            """bsl
            УИДПользователя1C = "$перУИДПользователя1C$";
            ИмяПользователяИБ = "$перИмяПользователя$";
            ПарольПользователяИБ = "$перПарольПользователя$";

            ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователяИБ);
//            ИмяГруппаДоступа1 = "(КЦМ) Права только на вход в 1С";
//            ИмяГруппаДоступа2 = "HR BP (КЦМ)";

            СозданНовый = Ложь;

            Если ПользовательИБ = Неопределено Тогда
            ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
            СозданНовый = Истина;
            КонецЕсли;
            ПользовательИБ.Имя       = ИмяПользователяИБ;
            ПользовательИБ.АутентификацияСтандартная = Истина;
            ПользовательИБ.ПоказыватьВСпискеВыбора	 = Ложь;
            ПользовательИБ.АутентификацияОС = Ложь;
            ПользовательИБ.ПолноеИмя = ИмяПользователяИБ;
            ПользовательИБ.Пароль = ПарольПользователяИБ;
            ПользовательИБ.Роли.Очистить();
            ПользовательИБ.Записать();

            Пользователь = Справочники.Пользователи.НайтиПоРеквизиту(
            "ИдентификаторПользователяИБ", ПользовательИБ.УникальныйИдентификатор);

            Если Не ЗначениеЗаполнено(Пользователь) Тогда

            Пользователь = Справочники.Пользователи.СоздатьЭлемент();

            НовыйПользовательСсылка = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(УИДПользователя1C));
            Пользователь.УстановитьСсылкуНового(НовыйПользовательСсылка);

            Пользователь.Наименование = ПользовательИБ.ПолноеИмя;
            ОписаниеПользователяИБ = Новый Структура;

            ОписаниеПользователяИБ.Вставить("Действие", "Записать");
            ОписаниеПользователяИБ.Вставить(
            "УникальныйИдентификатор", ПользовательИБ.УникальныйИдентификатор);

            Пользователь.ДополнительныеСвойства.Вставить(
            "ОписаниеПользователяИБ", ОписаниеПользователяИБ);

            Пользователь.Записать();

            КонецЕсли;
            
			//ГруппаДоступа1 = Справочники.ГруппыДоступа.НайтиПоНаименованию(ИмяГруппаДоступа1);
            Если ЗначениеЗаполнено(ГруппаДоступа1) Тогда

            ОбъектГруппаДоступа = ГруппаДоступа1.ПолучитьОбъект();
            Если ОбъектГруппаДоступа.Пользователи.Найти(Пользователь.Ссылка) = Неопределено тогда
            СтрокаПользователей = ОбъектГруппаДоступа.Пользователи.Добавить();
            СтрокаПользователей.Пользователь = Пользователь.Ссылка;
            ОбъектГруппаДоступа.Записать();
            КонецЕсли;

            Иначе
            ТекстСообщения = "Не найдена группа доступа" + ГруппаДоступа1;
            ВызватьИсключение ТекстСообщения
            КонецЕсли;

            ГруппаДоступа2 = Справочники.ГруппыДоступа.НайтиПоНаименованию(ИмяГруппаДоступа2);
            Если ЗначениеЗаполнено(ГруппаДоступа2) Тогда

            ОбъектГруппаДоступа = ГруппаДоступа2.ПолучитьОбъект();
            Если ОбъектГруппаДоступа.Пользователи.Найти(Пользователь.Ссылка) = Неопределено тогда
            СтрокаПользователей = ОбъектГруппаДоступа.Пользователи.Добавить();
            СтрокаПользователей.Пользователь = Пользователь.Ссылка;
            ОбъектГруппаДоступа.Записать();
            КонецЕсли;

            Иначе
            ТекстСообщения = "Не найдена группа доступа" + ГруппаДоступа2;
            ВызватьИсключение ТекстСообщения
            КонецЕсли;

            ПользователиДляОбновления = Новый Массив;
            ПользователиДляОбновления.Добавить(Пользователь.Ссылка);

            МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
            МодульУправлениеДоступом.ОбновитьРолиПользователей(ПользователиДляОбновления);
            """

И я закрываю все окна клиентского приложения

Сценарий: Я устанавливаю вход у пользователя "ИмяПользователя" через аутентификацию 1С с паролем "ПарольПользователя"

	И я запоминаю строку "ИмяПользователя" в переменную "перИмяПользователя"
 	И я запоминаю строку "ПарольПользователя" в переменную "перПарольПользователя"
 	И я запоминаю строку "УИДПользователя1C" в переменную "перУИДПользователя1C"

    И я выполняю код встроенного языка на сервере
            """bsl
            ИмяПользователяИБ = "$перИмяПользователя$";
            ПарольПользователяИБ = "$перПарольПользователя$";

            ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователяИБ);

			Если ПользовательИБ = Неопределено Тогда
			ВызватьИсключение "Не существует пользователя ИБ: " + ИмяПользователяИБ;
			КонецЕсли;
            СозданНовый = Ложь;
            
			ПользовательИБ.Пароль = ПарольПользователяИБ;

            ПользовательИБ.АутентификацияСтандартная = Истина;
            ПользовательИБ.ПоказыватьВСпискеВыбора	 = Истина;
			ПользовательИБ.Записать();

            Пользователь = Справочники.Пользователи.НайтиПоРеквизиту(
            "ИдентификаторПользователяИБ", ПользовательИБ.УникальныйИдентификатор);
     		Если Не ЗначениеЗаполнено(Пользователь) Тогда    
			ВызватьИсключение "Не найден по идентификатору пользователь в справочнике Пользователи: " + ИмяПользователяИБ;
			КонецЕсли;
            """

И я закрываю все окна клиентского приложения

